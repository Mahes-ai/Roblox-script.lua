-- Universal Roblox Script with Orion Library
-- Features: Fly (creative mode style), Speed Boost with indicator, NoClip (pass through walls)
-- Improved to ensure GUI appears and works properly

-- Load Orion Library
local OrionLib = loadstring(game:HttpGet(('https://raw.githubusercontent.com/shlexware/Orion/main/source')))()

-- Create window
local Window = OrionLib:MakeWindow({
    Name = "UniversalScript",
    HidePremium = true,
    SaveConfig = true,
    ConfigFolder = "UniversalScriptConfig"
})

-- Player and character references
local player = game.Players.LocalPlayer
local character = player.Character or player.CharacterAdded:Wait()
local humanoid = character:WaitForChild("Humanoid")

-- State variables
local flying = false
local flySpeed = 50
local bodyGyro, bodyVelocity

local speedBoostEnabled = false
local baseWalkSpeed = humanoid.WalkSpeed
local speedBoostAmount = 30

local noclipEnabled = false

-- Update character references on respawn
local function refreshCharacter()
    character = player.Character or player.CharacterAdded:Wait()
    humanoid = character:WaitForChild("Humanoid")
end

player.CharacterAdded:Connect(function()
    wait(1)
    refreshCharacter()
    flying = false
    speedBoostEnabled = false
    noclipEnabled = false
    humanoid.WalkSpeed = baseWalkSpeed
    if bodyGyro then bodyGyro:Destroy() bodyGyro = nil end
    if bodyVelocity then bodyVelocity:Destroy() bodyVelocity = nil end
    updateSpeedLabel()
end)

-- Flying Functions
local function startFly()
    if flying then return end
    flying = true

    local rootPart = character:WaitForChild("HumanoidRootPart")

    bodyGyro = Instance.new("BodyGyro")
    bodyGyro.P = 9e4
    bodyGyro.MaxTorque = Vector3.new(9e9, 9e9, 9e9)
    bodyGyro.CFrame = rootPart.CFrame
    bodyGyro.Parent = rootPart

    bodyVelocity = Instance.new("BodyVelocity")
    bodyVelocity.MaxForce = Vector3.new(9e9, 9e9, 9e9)
    bodyVelocity.Velocity = Vector3.new(0,0,0)
    bodyVelocity.Parent = rootPart

    local UIS = game:GetService("UserInputService")
    local RunService = game:GetService("RunService")

    local connection
    connection = RunService.Heartbeat:Connect(function()
        if not flying then
            connection:Disconnect()
            return
        end

        local direction = Vector3.new()
        local camCF = workspace.CurrentCamera.CFrame

        if UIS:IsKeyDown(Enum.KeyCode.W) then
            direction = direction + camCF.LookVector
        end
        if UIS:IsKeyDown(Enum.KeyCode.S) then
            direction = direction - camCF.LookVector
        end
        if UIS:IsKeyDown(Enum.KeyCode.A) then
            direction = direction - camCF.RightVector
        end
        if UIS:IsKeyDown(Enum.KeyCode.D) then
            direction = direction + camCF.RightVector
        end
        if UIS:IsKeyDown(Enum.KeyCode.Space) then
            direction = direction + Vector3.new(0,1,0)
        end
        if UIS:IsKeyDown(Enum.KeyCode.LeftShift) then
            direction = direction - Vector3.new(0,1,0)
        end

        if direction.Magnitude > 0 then
            direction = direction.Unit * flySpeed
        end

        bodyVelocity.Velocity = direction
        bodyGyro.CFrame = camCF
    end)
end

local function stopFly()
    flying = false
    if bodyGyro then
        bodyGyro:Destroy()
        bodyGyro = nil
    end
    if bodyVelocity then
        bodyVelocity:Destroy()
        bodyVelocity = nil
    end
end

-- Speed Boost Functions
local speedLabel

local function updateSpeedLabel()
    if speedLabel then
        speedLabel:Set("Speed: " .. tostring(math.floor(humanoid.WalkSpeed)))
    end
end

local function startSpeedBoost()
    speedBoostEnabled = true
    humanoid.WalkSpeed = baseWalkSpeed + speedBoostAmount
    updateSpeedLabel()
end

local function stopSpeedBoost()
    speedBoostEnabled = false
    humanoid.WalkSpeed = baseWalkSpeed
    updateSpeedLabel()
end

-- NoClip Functions
local RunService = game:GetService("RunService")

local noclipConnection

local function enableNoClip()
    noclipConnection = RunService.Stepped:Connect(function()
        if character and noclipEnabled then
            for _, part in pairs(character:GetChildren()) do
                if part:IsA("BasePart") then
                    part.CanCollide = false
                end
            end
        end
    end)
end

local function disableNoClip()
    if noclipConnection then
        noclipConnection:Disconnect()
        noclipConnection = nil
    end
    if character then
        for _, part in pairs(character:GetChildren()) do
            if part:IsA("BasePart") then
                part.CanCollide = true
            end
        end
    end
end

local function setNoClip(enabled)
    noclipEnabled = enabled
    if noclipEnabled then
        enableNoClip()
    else
        disableNoClip()
    end
end

-- UI Setup
local MainTab = Window:MakeTab({
    Name = "Main",
    Icon = "rbxassetid://4483345998",
    PremiumOnly = false
})

-- Add Fly toggle
MainTab:AddToggle({
    Name = "Fly",
    Default = false,
    Callback = function(value)
        if value then
            startFly()
        else
            stopFly()
        end
    end
})

-- Add Speed Boost toggle
MainTab:AddToggle({
    Name = "Speed Boost",
    Default = false,
    Callback = function(value)
        if value then
            startSpeedBoost()
        else
            stopSpeedBoost()
        end
    end
})

-- Add Speed Indicator label
speedLabel = MainTab:AddLabel("Speed: " .. tostring(humanoid.WalkSpeed))

-- Add NoClip toggle
MainTab:AddToggle({
    Name = "NoClip",
    Default = false,
    Callback = function(value)
        setNoClip(value)
    end
})

-- Show the window explicitly (some Orion versions require this)
Window:Init()

-- Print to console for debug
print("[UniversalScript] GUI Loaded. Use toggles to enable features.")

