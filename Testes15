-- Mobile-Compatible Mod Menu (Fixed Version)
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer
local char = player.Character or player.CharacterAdded:Wait()
local hrp = char:WaitForChild("HumanoidRootPart")
local hum = char:WaitForChild("Humanoid")

-- UI
local gui = Instance.new("ScreenGui", game.CoreGui)
gui.ResetOnSpawn = false

local function makeBtn(name, pos, callback)
	local btn = Instance.new("TextButton", gui)
	btn.Size = UDim2.new(0, 140, 0, 40)
	btn.Position = pos
	btn.Text = name
	btn.BackgroundColor3 = Color3.fromRGB(30,30,30)
	btn.TextColor3 = Color3.fromRGB(255,255,255)
	btn.TextScaled = true
	btn.BorderSizePixel = 1
	btn.MouseButton1Click:Connect(callback)
	return btn
end

-- FLY
local flying = false
local flyConnection = nil
local moveVector = Vector3.zero

makeBtn("Fly (Toggle)", UDim2.new(0, 10, 0, 10), function()
	flying = not flying
	if flying then
		local bp = Instance.new("BodyPosition", hrp)
		bp.Name = "FlyBP"
		bp.MaxForce = Vector3.new(999999, 999999, 999999)
		bp.D = 10
		bp.Position = hrp.Position

		local bg = Instance.new("BodyGyro", hrp)
		bg.Name = "FlyGyro"
		bg.MaxTorque = Vector3.new(999999, 999999, 999999)
		bg.CFrame = hrp.CFrame

		-- Track input movement
		UserInputService.InputChanged:Connect(function(input)
			if input.UserInputType == Enum.UserInputType.Touch then
				moveVector = input.Position
			end
		end)

		flyConnection = RunService.RenderStepped:Connect(function()
			local cam = workspace.CurrentCamera
			local mv = Vector3.zero

			if UserInputService:IsKeyDown(Enum.KeyCode.W) then
				mv = mv + cam.CFrame.LookVector
			end
			if UserInputService:IsKeyDown(Enum.KeyCode.S) then
				mv = mv - cam.CFrame.LookVector
			end
			if UserInputService:IsKeyDown(Enum.KeyCode.D) then
				mv = mv + cam.CFrame.RightVector
			end
			if UserInputService:IsKeyDown(Enum.KeyCode.A) then
				mv = mv - cam.CFrame.RightVector
			end

			local bp = hrp:FindFirstChild("FlyBP")
			local bg = hrp:FindFirstChild("FlyGyro")
			if bp and bg then
				if mv.Magnitude > 0 then
					bp.Position = hrp.Position + mv.Unit * 3
				else
					bp.Position = hrp.Position
				end
				bg.CFrame = cam.CFrame
			end
		end)
	else
		if flyConnection then flyConnection:Disconnect() end
		if hrp:FindFirstChild("FlyBP") then hrp.FlyBP:Destroy() end
		if hrp:FindFirstChild("FlyGyro") then hrp.FlyGyro:Destroy() end
	end
end)

-- SPEED
makeBtn("Speed x2", UDim2.new(0, 10, 0, 60), function()
	hum.WalkSpeed = hum.WalkSpeed == 16 and 32 or 16
end)

-- NOCLIP
local noclip = false
local noclipConnection

makeBtn("Noclip (Toggle)", UDim2.new(0, 10, 0, 110), function()
	noclip = not noclip
	if noclip then
		noclipConnection = RunService.Stepped:Connect(function()
			for _, part in pairs(char:GetDescendants()) do
				if part:IsA("BasePart") then
					part.CanCollide = false
				end
			end
		end)
	else
		if noclipConnection then
			noclipConnection:Disconnect()
		end
		for _, part in pairs(char:GetDescendants()) do
			if part:IsA("BasePart") then
				part.CanCollide = true
			end
		end
	end
end)

-- ESP
local espEnabled = false

local function toggleESP()
	espEnabled = not espEnabled
	for _, p in pairs(Players:GetPlayers()) do
		if p ~= player and p.Character and p.Character:FindFirstChild("HumanoidRootPart") then
			local part = p.Character.HumanoidRootPart
			if espEnabled then
				local box = Instance.new("BoxHandleAdornment")
				box.Name = "ESPBox"
				box.Adornee = part
				box.Size = Vector3.new(4, 6, 1)
				box.Transparency = 0.5
				box.Color3 = Color3.new(1, 0, 0)
				box.AlwaysOnTop = true
				box.ZIndex = 5
				box.Parent = part
			else
				local old = part:FindFirstChild("ESPBox")
				if old then old:Destroy() end
			end
		end
	end
end

makeBtn("ESP (Toggle)", UDim2.new(0, 10, 0, 160), function()
	toggleESP()
end)

-- ANTI AFK
makeBtn("Anti-AFK", UDim2.new(0, 10, 0, 210), function()
	local vu = game:GetService("VirtualUser")
	player.Idled:Connect(function()
		vu:Button2Down(Vector2.new(), workspace.CurrentCamera.CFrame)
		wait(1)
		vu:Button2Up(Vector2.new(), workspace.CurrentCamera.CFrame)
	end)
end)
