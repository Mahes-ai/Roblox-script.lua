-- MOD MENU DELTA MOBILE PRO (Fly, Speed, Noclip + Drag Icon + Switch Button)

local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local player = game.Players.LocalPlayer
local char = player.Character or player.CharacterAdded:Wait()
local humanoid = char:WaitForChild("Humanoid")
local hrp = char:WaitForChild("HumanoidRootPart")

-- Utility function buat bikin switch toggle
local function createSwitch(parent, pos)
	local frame = Instance.new("Frame", parent)
	frame.Size = UDim2.new(0, 50, 0, 25)
	frame.Position = pos
	frame.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
	frame.ClipsDescendants = true
	frame.AnchorPoint = Vector2.new(0, 0)
	frame.Active = true

	local circle = Instance.new("Frame", frame)
	circle.Size = UDim2.new(0, 23, 0, 23)
	circle.Position = UDim2.new(0, 2, 0, 1)
	circle.BackgroundColor3 = Color3.fromRGB(200, 200, 200)
	circle.AnchorPoint = Vector2.new(0, 0)
	circle.ClipsDescendants = true
	circle.BorderSizePixel = 0
	circle.Name = "Circle"
	circle.AutomaticSize = Enum.AutomaticSize.None
	circle.BackgroundTransparency = 0
	circle.Position = UDim2.new(0, 2, 0, 1)
	circle.ZIndex = 2
	circle.Active = true
	circle.Selectable = true
	circle.AnchorPoint = Vector2.new(0,0)
	circle.ZIndex = 2
	circle.ClipsDescendants = true
	circle.LayoutOrder = 1
	circle.Rotation = 0
	circle.AutoLocalize = false
	circle.BorderMode = Enum.BorderMode.Outline

	-- State
	local toggled = false

	local function toggle(state)
		toggled = state
		if toggled then
			frame.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
			circle:TweenPosition(UDim2.new(1, -25, 0, 1), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.25, true)
		else
			frame.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
			circle:TweenPosition(UDim2.new(0, 2, 0, 1), Enum.EasingDirection.Out, Enum.EasingStyle.Quad, 0.25, true)
		end
	end

	frame.InputBegan:Connect(function(input)
		if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
			toggle(not toggled)
			if frame.ChangedCallback then
				frame.ChangedCallback(toggled)
			end
		end
	end)

	frame.Toggle = toggle
	frame.GetState = function() return toggled end
	return frame
end

-- GUI Setup
local screenGui = Instance.new("ScreenGui", game.CoreGui)
screenGui.Name = "ModMenuGui"

-- Draggable Icon Button
local dragBtn = Instance.new("TextButton", screenGui)
dragBtn.Size = UDim2.new(0, 45, 0, 45)
dragBtn.Position = UDim2.new(0, 20, 0.4, 0)
dragBtn.Text = "⚙️"
dragBtn.Font = Enum.Font.GothamBold
dragBtn.TextSize = 30
dragBtn.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
dragBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
dragBtn.AutoButtonColor = false
dragBtn.BorderSizePixel = 0
dragBtn.ZIndex = 1000
dragBtn.Active = true
dragBtn.Selectable = true
dragBtn.Draggable = true

-- Main Frame (hidden awal)
local mainFrame = Instance.new("Frame", screenGui)
mainFrame.Size = UDim2.new(0, 220, 0, 260)
mainFrame.Position = UDim2.new(0, 70, 0.35, 0)
mainFrame.BackgroundColor3 = Color3.fromRGB(25, 25, 25)
mainFrame.Visible = false
mainFrame.ZIndex = 999

local uicorner = Instance.new("UICorner", mainFrame)
uicorner.CornerRadius = UDim.new(0, 15)

-- Title
local title = Instance.new("TextLabel", mainFrame)
title.Text = "Mod Menu"
title.Size = UDim2.new(1, 0, 0, 40)
title.BackgroundTransparency = 1
title.TextColor3 = Color3.fromRGB(170, 170, 170)
title.Font = Enum.Font.GothamBold
title.TextSize = 24

-- Close button
local closeBtn = Instance.new("TextButton", mainFrame)
closeBtn.Text = "X"
closeBtn.Size = UDim2.new(0, 30, 0, 30)
closeBtn.Position = UDim2.new(1, -35, 0, 5)
closeBtn.BackgroundColor3 = Color3.fromRGB(170, 0, 0)
closeBtn.TextColor3 = Color3.fromRGB(255,255,255)
closeBtn.Font = Enum.Font.GothamBold
closeBtn.TextSize = 20
closeBtn.AutoButtonColor = true
closeBtn.ZIndex = 1001

closeBtn.MouseButton1Click:Connect(function()
	mainFrame.Visible = false
end)

-- Toggle main menu visibility on dragBtn click
dragBtn.MouseButton1Click:Connect(function()
	mainFrame.Visible = not mainFrame.Visible
end)

-- Fly Tab
local flyLabel = Instance.new("TextLabel", mainFrame)
flyLabel.Text = "Fly"
flyLabel.Size = UDim2.new(0, 70, 0, 30)
flyLabel.Position = UDim2.new(0, 15, 0, 50)
flyLabel.BackgroundTransparency = 1
flyLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
flyLabel.Font = Enum.Font.Gotham
flyLabel.TextSize = 20

local flySwitch = createSwitch(mainFrame, UDim2.new(0, 120, 0, 50))

-- Speed Tab
local speedLabel = Instance.new("TextLabel", mainFrame)
speedLabel.Text = "Speed Boost"
speedLabel.Size = UDim2.new(0, 100, 0, 30)
speedLabel.Position = UDim2.new(0, 15, 0, 100)
speedLabel.BackgroundTransparency = 1
speedLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
speedLabel.Font = Enum.Font.Gotham
speedLabel.TextSize = 20

local speedSwitch = createSwitch(mainFrame, UDim2.new(0, 120, 0, 100))

-- Noclip Tab
local noclipLabel = Instance.new("TextLabel", mainFrame)
noclipLabel.Text = "Noclip"
noclipLabel.Size = UDim2.new(0, 70, 0, 30)
noclipLabel.Position = UDim2.new(0, 15, 0, 150)
noclipLabel.BackgroundTransparency = 1
noclipLabel.TextColor3 = Color3.fromRGB(200, 200, 200)
noclipLabel.Font = Enum.Font.Gotham
noclipLabel.TextSize = 20

local noclipSwitch = createSwitch(mainFrame, UDim2.new(0, 120, 0, 150))

-- Variables fly control
local flying = false
local speedActive = false
local noclipActive = false
local velocityForce = nil

local controls = {
	forward = false,
	back = false,
	left = false,
	right = false,
	up = false,
	down = false,
}

-- Update character reference on respawn
local function updateCharacter()
	char = player.Character or player.CharacterAdded:Wait()
	humanoid = char:WaitForChild("Humanoid")
	hrp = char:WaitForChild("HumanoidRootPart")
end
updateCharacter()
player.CharacterAdded:Connect(updateCharacter)

-- Handle input for fly control
UserInputService.InputBegan:Connect(function(input, gameProcessed)
	if gameProcessed then return end
	if input.KeyCode == Enum.KeyCode.W then
		controls.forward = true
	elseif input.KeyCode == Enum.KeyCode.S then
		controls.back = true
	elseif input.KeyCode == Enum.KeyCode.A then
		controls.left = true
	elseif input.KeyCode == Enum.KeyCode.D then
		controls.right = true
	elseif input.KeyCode == Enum.KeyCode.Space then
		controls.up = true
	elseif input.KeyCode == Enum.KeyCode.LeftControl or input.KeyCode == Enum.KeyCode.C then
		controls.down = true
	end
end)

UserInputService.InputEnded:Connect(function(input, gameProcessed)
	if gameProcessed then return end
	if input.KeyCode == Enum.KeyCode.W then
		controls.forward = false
	elseif input.KeyCode == Enum.KeyCode.S then
		controls.back = false
	elseif input.KeyCode == Enum.KeyCode.A then
		controls.left = false
	elseif input.KeyCode == Enum.KeyCode.D then
		controls.right = false
	elseif input.KeyCode == Enum.KeyCode.Space then
		controls.up = false
	elseif input.KeyCode == Enum.KeyCode.LeftControl or input.KeyCode == Enum.KeyCode.C then
		controls.down = false
	end
end)

-- Fly logic
local function updateFly()
	if flying and hrp then
		local flySpeed = 80
		local moveVec = Vector3.new(0,0,0)
		if controls.forward then
			moveVec = moveVec + workspace.CurrentCamera.CFrame.LookVector
		end
		if controls.back then
			moveVec = moveVec - workspace.CurrentCamera.CFrame.LookVector
		end
		if controls.left then
			moveVec = moveVec - workspace.CurrentCamera.CFrame.RightVector
		end
		if controls.right then
			moveVec = moveVec + workspace.CurrentCamera.CFrame.RightVector
		end
		if controls.up then
			moveVec = moveVec + Vector3.new(0,1,0)
		end
		if controls.down then
			moveVec = moveVec - Vector3.new(0,1,0)
		end
		if moveVec.Magnitude > 0 then
			moveVec = moveVec.Unit * flySpeed
		end
		velocityForce.Velocity = moveVec
	else
		if velocityForce then
			velocityForce.Velocity = Vector3.new(0,0,0)
		end
	end
end

-- Toggle Fly
flySwitch.ChangedCallback = function(state)
	flying = state
	if flying then
		if velocityForce == nil then
			velocityForce = Instance.new("BodyVelocity", hrp)
			velocityForce.MaxForce = Vector3.new(9e9, 9e9, 9e9)
			velocityForce.Velocity = Vector3.new(0, 0, 0)
			velocityForce.P = 1e5
		end
		humanoid.PlatformStand = true -- disable physics to allow fly control
	else
		if velocityForce then
			velocityForce:Destroy()
			velocityForce = nil
		end
		humanoid.PlatformStand = false
	end
end

-- Toggle Speed
speedSwitch.ChangedCallback = function(state)
	speedActive = state
	if speedActive then
		humanoid.WalkSpeed = 120
	else
		humanoid.WalkSpeed = 16
	end
end

-- Toggle Noclip
noclipSwitch.ChangedCallback = function(state)
	noclipActive = state
	noclipSwitch.Toggle(state)
end

-- Noclip logic without messing animations or movement
RunService.Stepped:Connect(function()
	if noclipActive and char then
		for _, part in pairs(char:GetDescendants()) do
			if part:IsA("BasePart") then
				part.CanCollide = false
			end
		end
	else
		if char then
			for _, part in pairs(char:GetDescendants()) do
				if part:IsA("BasePart") then
					part.CanCollide = true
				end
			end
		end
	end
end)

-- Fly update loop
RunService.Heartbeat:Connect(function()
	updateFly()
	-- Prevent velocity jerk for noclip
	if noclipActive and hrp then
		local vel = hrp.Velocity
		hrp.Velocity = Vector3.new(vel.X, vel.Y, vel.Z)
	end
end)
